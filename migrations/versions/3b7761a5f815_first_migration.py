"""first migration

Revision ID: 3b7761a5f815
Revises: 
Create Date: 2022-12-09 22:14:15.014933

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '3b7761a5f815'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.drop_index('empid_idx')
        batch_op.drop_index('empname_idx')
        batch_op.drop_index('serial_num_emp_idx')

    op.drop_table('employee')
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.drop_index('cost_idx')
        batch_op.drop_index('itemid_idx')
        batch_op.drop_index('name_idx')
        batch_op.drop_index('serial_num_idx')

    op.drop_table('items')
    with op.batch_alter_table('userlogs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('userid', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('username', sa.String(length=20), nullable=False))
        batch_op.drop_constraint('userlogs_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['username'], ['username'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.drop_column('user_name')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('email')
        batch_op.drop_column('phone')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('phone', mysql.VARCHAR(length=14), nullable=True))
        batch_op.add_column(sa.Column('email', mysql.VARCHAR(length=30), nullable=True))

    with op.batch_alter_table('userlogs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_name', mysql.VARCHAR(length=20), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('userlogs_ibfk_1', 'users', ['user_name'], ['username'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.drop_column('username')
        batch_op.drop_column('userid')

    op.create_table('items',
    sa.Column('id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', mysql.VARCHAR(length=30), nullable=True),
    sa.Column('type', mysql.VARCHAR(length=15), nullable=True),
    sa.Column('cost', mysql.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('from_date', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('to_date', mysql.TIMESTAMP(), nullable=True),
    sa.Column('serial_number', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('serial_number'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.create_index('serial_num_idx', ['serial_number'], unique=False)
        batch_op.create_index('name_idx', ['description'], unique=False)
        batch_op.create_index('itemid_idx', ['id'], unique=False)
        batch_op.create_index('cost_idx', ['cost'], unique=False)

    op.create_table('employee',
    sa.Column('id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('gender', mysql.VARCHAR(length=10), nullable=True),
    sa.Column('serial_number', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('serial_number'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.create_index('serial_num_emp_idx', ['serial_number'], unique=False)
        batch_op.create_index('empname_idx', ['name'], unique=False)
        batch_op.create_index('empid_idx', ['id'], unique=False)

    # ### end Alembic commands ###
